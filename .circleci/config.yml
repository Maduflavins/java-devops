orbs:
  heroku: circleci/heroku@1.2.2
version: 2.1
jobs:
  build:
      working_directory: ~/spring-boot-rest-api-tutorial
      docker:
        - image: circleci/openjdk:8-jdk-stretch
        - image: circleci/postgres:9.6.3-alpine
      environment:
        POSTGRES_TEST_USER: ${TEST_DB_USER}
        POSTGRES_TEST_DB: ${TEST_DB_NAME}
        POSTGRES_PROD_USER: ${PROD_DB_USER}
        POSTGRES_PROD_DB: ${PROD_DB_NAME}
      steps:
        - checkout
        - restore_cache:
            key: spring-boot-rest-api-tutorial-{{ checksum "pom.xml" }}
        - run: mvn package
        - run:
           name: start your application
           command: java -jar spring-boot-rest-api-tutorial-0.0.1-SNAPSHOT.jar
        - store_test_results:
            path: cibuild/test-results
        - store_artifacts:
            path: cibuild/test-results/spring-boot-rest-api-tutorial-0.0.1-SNAPSHOT.jar

  production_build:
    docker:
      - image: circleci/openjdk:8-jdk-stretch
      - image: circleci/postgres:9.4.12-alpine
        environment:
          POSTGRES_USER: ${PROD_DB_USER}
          POSTGRES_DB: ${PROD_DB_NAME}
    working_directory: ~/spring-boot-rest-api-tutorial
    steps:
      - checkout
      - run: mvn package
      - run: cd target
      - run:
          name: start your application
          command: java -jar spring-boot-rest-api-tutorial-0.0.1-SNAPSHOT.jar

workflows:
  heroku_deploy:
    jobs:
      - build
      - production_build
      - heroku/deploy-via-git:
          requires:
            - build
          filters:
            branches:
              only: development
